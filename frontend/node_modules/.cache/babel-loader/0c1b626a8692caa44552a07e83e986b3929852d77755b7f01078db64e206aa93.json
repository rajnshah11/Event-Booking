{"ast":null,"code":"var _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useContext } from \"react\";\nimport \"./Auth.css\";\nimport AuthContext from \"../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error state for validation messages\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const authContext = useContext(AuthContext);\n  const validateForm = (email, password, confirmPassword) => {\n    // Simple email validation\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailPattern.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n\n    // Password length validation\n    if (password.length < 6) {\n      return \"Password should be at least 6 characters long.\";\n    }\n\n    // Confirm password validation (only in signup mode)\n    if (!isLogin && password !== confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null; // No validation errors\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current ? confirmPasswordRef.current.value : null;\n\n    // Perform validation\n    const error = validateForm(email, password, confirmPassword);\n    if (error) {\n      setErrorMessage(error);\n      return;\n    }\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n    };\n    if (!isLogin) {\n      requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              email\n            }\n          }\n        `\n      };\n    }\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(resData => {\n      if (resData.data.login.token) {\n        authContext.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleSwitch = () => {\n    setIsLogin(prevState => !prevState);\n    setErrorMessage(\"\"); // Reset error message when switching modes\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"auth-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        ref: confirmPasswordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSwitch,\n        children: [\"Switch to \", isLogin ? \"Signup\" : \"Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"/zjO+K/qJUdDwtYBJg9jQNL5EFQ=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useRef","useContext","AuthContext","jsxDEV","_jsxDEV","AuthPage","_s","isLogin","setIsLogin","errorMessage","setErrorMessage","emailRef","passwordRef","confirmPasswordRef","authContext","validateForm","email","password","confirmPassword","emailPattern","test","length","handleSubmit","event","preventDefault","current","value","error","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","userId","tokenExpiration","catch","err","console","log","handleSwitch","prevState","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState, useRef, useContext } from \"react\";\nimport \"./Auth.css\";\nimport AuthContext from \"../context/auth-context\";\n\nconst AuthPage = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error state for validation messages\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  const authContext = useContext(AuthContext);\n\n  const validateForm = (email, password, confirmPassword) => {\n    // Simple email validation\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailPattern.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n\n    // Password length validation\n    if (password.length < 6) {\n      return \"Password should be at least 6 characters long.\";\n    }\n\n    // Confirm password validation (only in signup mode)\n    if (!isLogin && password !== confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n\n    return null; // No validation errors\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current\n      ? confirmPasswordRef.current.value\n      : null;\n\n    // Perform validation\n    const error = validateForm(email, password, confirmPassword);\n    if (error) {\n      setErrorMessage(error);\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n    };\n\n    if (!isLogin) {\n      requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              email\n            }\n          }\n        `,\n      };\n    }\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.data.login.token) {\n          authContext.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleSwitch = () => {\n    setIsLogin((prevState) => !prevState);\n    setErrorMessage(\"\"); // Reset error message when switching modes\n  };\n\n  return (\n    <form className=\"auth-form\" onSubmit={handleSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"email\">E-mail</label>\n        <input type=\"email\" id=\"email\" ref={emailRef} />\n      </div>\n\n      <div className=\"form-control\">\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" ref={passwordRef} />\n      </div>\n\n      {/* Confirm Password field only shown in Signup mode */}\n      {!isLogin && (\n        <div className=\"form-control\">\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input type=\"password\" id=\"confirmPassword\" ref={confirmPasswordRef} />\n        </div>\n      )}\n\n      {/* Display error message */}\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={handleSwitch}>\n          Switch to {isLogin ? \"Signup\" : \"Login\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}