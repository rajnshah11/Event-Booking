{"ast":null,"code":"var _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For React Router v5\nimport \"./Auth.css\";\nimport AuthContext from \"../../context/auth-context\"; // Adjust the path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const authContext = useContext(AuthContext);\n  const history = useHistory(); // Initialize useHistory\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setErrorMessage(\"Email and password are required.\");\n      return;\n    }\n    let requestBody;\n    if (isLogin) {\n      requestBody = {\n        query: `\n          query {\n            login(email: \"${email}\", password: \"${password}\") {\n              userId\n              token\n              tokenExpiration\n            }\n          }\n        `\n      };\n    } else {\n      requestBody = {\n        query: `mutation {\n          createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n            _id\n            email\n          }\n        }`\n      };\n    }\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(resData => {\n      if (isLogin && resData.data.login.token) {\n        authContext.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n        history.push(\"/events\"); // Navigate to events page\n      }\n    }).catch(err => {\n      console.log(err);\n      setErrorMessage(\"An error occurred. Please try again.\");\n    });\n  };\n  const handleSwitch = () => {\n    setIsLogin(prev => !prev);\n    setErrorMessage(\"\"); // Clear error message on switch\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"auth-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm-password\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirm-password\",\n        ref: confirmPasswordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSwitch,\n        children: [\"Switch to \", isLogin ? \"Signup\" : \"Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"fJ8LlTc9smkKDPSDYtQ21O5mT4g=\", false, function () {\n  return [useHistory];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useContext","useRef","useHistory","AuthContext","jsxDEV","_jsxDEV","AuthPage","_s","isLogin","setIsLogin","errorMessage","setErrorMessage","authContext","history","emailRef","passwordRef","confirmPasswordRef","handleSubmit","event","preventDefault","email","current","value","password","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","userId","tokenExpiration","push","catch","err","console","log","handleSwitch","prev","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For React Router v5\nimport \"./Auth.css\";\nimport AuthContext from \"../../context/auth-context\"; // Adjust the path\n\nconst AuthPage = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const authContext = useContext(AuthContext);\n  const history = useHistory(); // Initialize useHistory\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setErrorMessage(\"Email and password are required.\");\n      return;\n    }\n\n    let requestBody;\n\n    if (isLogin) {\n      requestBody = {\n        query: `\n          query {\n            login(email: \"${email}\", password: \"${password}\") {\n              userId\n              token\n              tokenExpiration\n            }\n          }\n        `,\n      };\n    } else {\n      requestBody = {\n        query: `mutation {\n          createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n            _id\n            email\n          }\n        }`,\n      };\n    }\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        if (isLogin && resData.data.login.token) {\n          authContext.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n          history.push(\"/events\"); // Navigate to events page\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(\"An error occurred. Please try again.\");\n      });\n  };\n\n  const handleSwitch = () => {\n    setIsLogin((prev) => !prev);\n    setErrorMessage(\"\"); // Clear error message on switch\n  };\n\n  return (\n    <form className=\"auth-form\" onSubmit={handleSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"email\">E-mail</label>\n        <input type=\"email\" id=\"email\" ref={emailRef} />\n      </div>\n\n      <div className=\"form-control\">\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" ref={passwordRef} />\n      </div>\n\n      {!isLogin && (\n        <div className=\"form-control\">\n          <label htmlFor=\"confirm-password\">Confirm Password</label>\n          <input\n            type=\"password\"\n            id=\"confirm-password\"\n            ref={confirmPasswordRef}\n          />\n        </div>\n      )}\n\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={handleSwitch}>\n          Switch to {isLogin ? \"Signup\" : \"Login\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}