{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { graphqlRequest } from \"../graphqlClient\";\nexport const useEvents = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = useSelector(state => state.auth.token);\n  const userId = useSelector(state => state.auth.userId);\n  const fetchEvents = useCallback(async () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n        query {\n          events {\n            _id\n            title\n            description\n            date\n            price\n            creator { _id }\n          }\n        }\n      `\n    };\n    try {\n      const resData = await graphqlRequest(requestBody.query);\n      setEvents(resData.data.events);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const createEvent = async eventData => {\n    const requestBody = {\n      query: `\n        mutation CreateEvent($title: String!, $description: String!, $date: String!, $price: Float!) {\n          createEvent(eventInput: { title: $title, description: $description, date: $date, price: $price }) {\n            _id\n            title\n            description\n            date\n            price\n            creater{\n            _id}\n          }\n        }\n      `,\n      variables: {\n        title: eventData.title,\n        description: eventData.description,\n        date: eventData.date,\n        price: eventData.price\n      }\n    };\n    try {\n      const resData = await graphqlRequest(requestBody.query, requestBody.variables, token);\n      setEvents(prevEvents => [...prevEvents, {\n        _id: resData.data.createEvent._id,\n        title: resData.data.createEvent.title,\n        description: resData.data.createEvent.description,\n        date: resData.data.createEvent.date,\n        price: resData.data.createEvent.price,\n        creator: {\n          _id: userId\n        }\n      }]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const bookEvent = async eventId => {\n    const requestBody = {\n      query: `\n        mutation BookEvent($eventId: ID!) {\n          bookEvent(eventId: $eventId) {\n            _id\n          }\n        }\n      `,\n      variables: {\n        eventId: eventId\n      }\n    };\n    try {\n      await graphqlRequest(requestBody.query, requestBody.variables, token);\n    } catch (error) {\n      console.error(error); // Handle error appropriately\n    }\n  };\n  return {\n    events,\n    isLoading,\n    fetchEvents,\n    createEvent,\n    bookEvent\n  };\n};\n_s(useEvents, \"hZR75jgZNkdt6DyDlNG8b1afJMU=\", false, function () {\n  return [useSelector, useSelector];\n});\nexport default useEvents;","map":{"version":3,"names":["useState","useCallback","useSelector","graphqlRequest","useEvents","_s","events","setEvents","isLoading","setIsLoading","token","state","auth","userId","fetchEvents","requestBody","query","resData","data","error","console","createEvent","eventData","variables","title","description","date","price","prevEvents","_id","creator","bookEvent","eventId"],"sources":["/Users/rajshah/Desktop/Event-Booking/client/src/controller/eventController/eventController.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { graphqlRequest } from \"../graphqlClient\";\n\nexport const useEvents = () => {\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = useSelector((state) => state.auth.token);\n  const userId = useSelector((state) => state.auth.userId);\n  const fetchEvents = useCallback(async () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n        query {\n          events {\n            _id\n            title\n            description\n            date\n            price\n            creator { _id }\n          }\n        }\n      `\n    };\n\n    try {\n      const resData = await graphqlRequest(requestBody.query);\n      setEvents(resData.data.events);\n    } catch (error) {\n      console.error(error); \n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const createEvent = async (eventData) => {\n    const requestBody = {\n      query: `\n        mutation CreateEvent($title: String!, $description: String!, $date: String!, $price: Float!) {\n          createEvent(eventInput: { title: $title, description: $description, date: $date, price: $price }) {\n            _id\n            title\n            description\n            date\n            price\n            creater{\n            _id}\n          }\n        }\n      `,\n      variables: {\n        title: eventData.title,\n        description: eventData.description,\n        date: eventData.date,\n        price: eventData.price\n      }\n    };\n\n    try {\n      const resData = await graphqlRequest(requestBody.query, requestBody.variables, token);\n      setEvents((prevEvents) => [\n        ...prevEvents,\n        {\n          _id: resData.data.createEvent._id,\n          title: resData.data.createEvent.title,\n          description: resData.data.createEvent.description,\n          date: resData.data.createEvent.date,\n          price: resData.data.createEvent.price,\n          creator: {\n            _id: userId, \n          },\n        },\n      ]);\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const bookEvent = async (eventId) => {\n    const requestBody = {\n      query: `\n        mutation BookEvent($eventId: ID!) {\n          bookEvent(eventId: $eventId) {\n            _id\n          }\n        }\n      `,\n      variables: {\n        eventId: eventId\n      }\n    };\n\n    try {\n      await graphqlRequest(requestBody.query, requestBody.variables, token);\n    } catch (error) {\n      console.error(error); // Handle error appropriately\n    }\n  };\n\n  return {\n    events,\n    isLoading,\n    fetchEvents,\n    createEvent,\n    bookEvent,\n  };\n};\n\nexport default useEvents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}