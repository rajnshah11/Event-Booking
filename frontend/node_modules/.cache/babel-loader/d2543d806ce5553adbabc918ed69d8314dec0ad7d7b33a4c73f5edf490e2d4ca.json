{"ast":null,"code":"var _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Bookings/Bookings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"../../context/auth-context\";\nimport Spinner from \"../Event/Spinner/Spinner\";\nimport BookingList from \"./BookingList/BookingList\";\nimport BookingsChart from \"./BookingsChart/BookingsChart\";\nimport BookingsControl from \"./BookingsControl/BookingsControl\";\nimport { useAuth } from \"../../context/auth-context\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingsPage = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [bookings, setBookings] = useState([]);\n  const [outputType, setOutputType] = useState(\"list\");\n  const context = useContext(AuthContext);\n  const authContext = useAuth();\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n  const fetchBookings = () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `query {\n        bookings {\n          _id\n          createdAt\n          event {\n            _id\n            title\n            date\n            price\n          }\n        }\n      }`\n    };\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(resData => {\n      const bookings = resData.data.bookings;\n      console.log(resData);\n      setBookings(bookings);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setIsLoading(false);\n    });\n  };\n  const deleteBookingHandler = bookingId => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `mutation {\n        cancelBooking(bookingId: \"${bookingId}\") {\n          _id\n          title\n        }\n      }`\n    };\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + context.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(() => {\n      setBookings(prevBookings => prevBookings.filter(booking => booking._id !== bookingId));\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setIsLoading(false);\n    });\n  };\n  const changeOutputTypeHandler = outputType => {\n    setOutputType(outputType);\n  };\n  let content = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 17\n  }, this);\n  if (!isLoading) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BookingsControl, {\n        activeOutputType: outputType,\n        onChange: changeOutputTypeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: outputType === \"list\" ? /*#__PURE__*/_jsxDEV(BookingList, {\n          bookings: bookings,\n          onDelete: deleteBookingHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(BookingsChart, {\n          bookings: bookings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: content\n  }, void 0, false);\n};\n_s(BookingsPage, \"z67IyV3X7Y65viZBv9k6MGODB9Y=\", false, function () {\n  return [useAuth];\n});\n_c = BookingsPage;\nexport default BookingsPage;\nvar _c;\n$RefreshReg$(_c, \"BookingsPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Spinner","BookingList","BookingsChart","BookingsControl","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingsPage","_s","isLoading","setIsLoading","bookings","setBookings","outputType","setOutputType","context","authContext","fetchBookings","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","token","then","res","status","Error","json","resData","data","console","log","catch","err","deleteBookingHandler","bookingId","prevBookings","filter","booking","_id","changeOutputTypeHandler","content","fileName","_jsxFileName","lineNumber","columnNumber","children","activeOutputType","onChange","onDelete","_c","$RefreshReg$"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Bookings/Bookings.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"../../context/auth-context\";\nimport Spinner from \"../Event/Spinner/Spinner\";\nimport BookingList from \"./BookingList/BookingList\";\nimport BookingsChart from \"./BookingsChart/BookingsChart\";\nimport BookingsControl from \"./BookingsControl/BookingsControl\";\nimport { useAuth } from \"../../context/auth-context\";\n\nconst BookingsPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [bookings, setBookings] = useState([]);\n  const [outputType, setOutputType] = useState(\"list\");\n  const context = useContext(AuthContext);\n  const authContext = useAuth(); \n\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n\n  const fetchBookings = () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `query {\n        bookings {\n          _id\n          createdAt\n          event {\n            _id\n            title\n            date\n            price\n          }\n        }\n      }`\n    };\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const bookings = resData.data.bookings;\n        console.log(resData); \n        setBookings(bookings);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n\n  const deleteBookingHandler = bookingId => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `mutation {\n        cancelBooking(bookingId: \"${bookingId}\") {\n          _id\n          title\n        }\n      }`\n    };\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(() => {\n        setBookings(prevBookings => \n          prevBookings.filter(booking => booking._id !== bookingId)\n        );\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n\n  const changeOutputTypeHandler = outputType => {\n    setOutputType(outputType);\n  };\n\n  let content = <Spinner />;\n  if (!isLoading) {\n    content = (\n      <>\n        <BookingsControl\n          activeOutputType={outputType}\n          onChange={changeOutputTypeHandler}\n        />\n        <div>\n          {outputType === \"list\" ? (\n            <BookingList\n              bookings={bookings}\n              onDelete={deleteBookingHandler}\n            />\n          ) : (\n            <BookingsChart bookings={bookings} />\n          )}\n        </div>\n      </>\n    );\n  }\n  \n  return <>{content}</>;\n};\n\nexport default BookingsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAMqB,OAAO,GAAGnB,UAAU,CAACC,WAAW,CAAC;EACvC,MAAMmB,WAAW,GAAGd,OAAO,CAAC,CAAC;EAE7BP,SAAS,CAAC,MAAM;IACdsB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1BP,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMQ,WAAW,GAAG;MAClBC,KAAK,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC;IAEDC,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC;MACjCO,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,SAAS,GAAGX,OAAO,CAACY;MACrC;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,IAAID,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QAC5C,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC3B;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,OAAO,IAAI;MACf,MAAMtB,QAAQ,GAAGsB,OAAO,CAACC,IAAI,CAACvB,QAAQ;MACtCwB,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpBrB,WAAW,CAACD,QAAQ,CAAC;MACrBD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACD2B,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChB5B,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,MAAM6B,oBAAoB,GAAGC,SAAS,IAAI;IACxC9B,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMQ,WAAW,GAAG;MAClBC,KAAK,EAAE;AACb,oCAAoCqB,SAAS;AAC7C;AACA;AACA;AACA;IACI,CAAC;IAEDpB,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC;MACjCO,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,SAAS,GAAGX,OAAO,CAACY;MACrC;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,IAAID,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QAC5C,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC3B;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAC,MAAM;MACVhB,WAAW,CAAC6B,YAAY,IACtBA,YAAY,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,KAAKJ,SAAS,CAC1D,CAAC;MACD9B,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACD2B,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChB5B,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,MAAMmC,uBAAuB,GAAGhC,UAAU,IAAI;IAC5CC,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC;EAED,IAAIiC,OAAO,gBAAG1C,OAAA,CAACN,OAAO;IAAAiD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACzB,IAAI,CAACzC,SAAS,EAAE;IACdqC,OAAO,gBACL1C,OAAA,CAAAE,SAAA;MAAA6C,QAAA,gBACE/C,OAAA,CAACH,eAAe;QACdmD,gBAAgB,EAAEvC,UAAW;QAC7BwC,QAAQ,EAAER;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACF9C,OAAA;QAAA+C,QAAA,EACGtC,UAAU,KAAK,MAAM,gBACpBT,OAAA,CAACL,WAAW;UACVY,QAAQ,EAAEA,QAAS;UACnB2C,QAAQ,EAAEf;QAAqB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,gBAEF9C,OAAA,CAACJ,aAAa;UAACW,QAAQ,EAAEA;QAAS;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACrC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,eACN,CACH;EACH;EAEA,oBAAO9C,OAAA,CAAAE,SAAA;IAAA6C,QAAA,EAAGL;EAAO,gBAAG,CAAC;AACvB,CAAC;AAACtC,EAAA,CAtHID,YAAY;EAAA,QAKIL,OAAO;AAAA;AAAAqD,EAAA,GALvBhD,YAAY;AAwHlB,eAAeA,YAAY;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}