{"ast":null,"code":"import{useState,useCallback}from\"react\";import{useSelector}from\"react-redux\";import{graphqlRequest}from\"../graphqlClient\";export const useEvents=()=>{const[events,setEvents]=useState([]);const[isLoading,setIsLoading]=useState(false);const token=useSelector(state=>state.auth.token);const userId=useSelector(state=>state.auth.userId);const fetchEvents=useCallback(async()=>{setIsLoading(true);const requestBody={query:`\n        query {\n          events {\n            _id\n            title\n            description\n            date\n            price\n            creator { _id }\n          }\n        }\n      `};try{const resData=await graphqlRequest(requestBody.query);setEvents(resData.data.events);}catch(error){console.error(error);}finally{setIsLoading(false);}},[]);const createEvent=async eventData=>{const requestBody={query:`\n        mutation CreateEvent($title: String!, $description: String!, $date: String!, $price: Float!) {\n          createEvent(eventInput: { title: $title, description: $description, date: $date, price: $price }) {\n            _id\n            title\n            description\n            date\n            price\n            creator {\n            _id}\n          }\n        }\n      `,variables:{title:eventData.title,description:eventData.description,date:eventData.date,price:eventData.price}};try{const resData=await graphqlRequest(requestBody.query,requestBody.variables,token);setEvents(prevEvents=>[...prevEvents,{_id:resData.data.createEvent._id,title:resData.data.createEvent.title,description:resData.data.createEvent.description,date:resData.data.createEvent.date,price:resData.data.createEvent.price,creator:{_id:userId}}]);}catch(error){console.error(error);}};const bookEvent=async eventId=>{const requestBody={query:`\n        mutation BookEvent($eventId: ID!) {\n          bookEvent(eventId: $eventId) {\n            _id\n          }\n        }\n      `,variables:{eventId:eventId}};try{await graphqlRequest(requestBody.query,requestBody.variables,token);}catch(error){console.error(error);// Handle error appropriately\n}};return{events,isLoading,fetchEvents,createEvent,bookEvent};};export default useEvents;","map":{"version":3,"names":["useState","useCallback","useSelector","graphqlRequest","useEvents","events","setEvents","isLoading","setIsLoading","token","state","auth","userId","fetchEvents","requestBody","query","resData","data","error","console","createEvent","eventData","variables","title","description","date","price","prevEvents","_id","creator","bookEvent","eventId"],"sources":["/Users/rajshah/Desktop/Event-Booking/client/src/controller/eventController/eventController.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { graphqlRequest } from \"../graphqlClient\";\n\nexport const useEvents = () => {\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = useSelector((state) => state.auth.token);\n  const userId = useSelector((state) => state.auth.userId);\n  const fetchEvents = useCallback(async () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n        query {\n          events {\n            _id\n            title\n            description\n            date\n            price\n            creator { _id }\n          }\n        }\n      `\n    };\n\n    try {\n      const resData = await graphqlRequest(requestBody.query);\n      setEvents(resData.data.events);\n    } catch (error) {\n      console.error(error); \n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const createEvent = async (eventData) => {\n    const requestBody = {\n      query: `\n        mutation CreateEvent($title: String!, $description: String!, $date: String!, $price: Float!) {\n          createEvent(eventInput: { title: $title, description: $description, date: $date, price: $price }) {\n            _id\n            title\n            description\n            date\n            price\n            creator {\n            _id}\n          }\n        }\n      `,\n      variables: {\n        title: eventData.title,\n        description: eventData.description,\n        date: eventData.date,\n        price: eventData.price\n      }\n    };\n\n    try {\n      const resData = await graphqlRequest(requestBody.query, requestBody.variables, token);\n      setEvents((prevEvents) => [\n        ...prevEvents,\n        {\n          _id: resData.data.createEvent._id,\n          title: resData.data.createEvent.title,\n          description: resData.data.createEvent.description,\n          date: resData.data.createEvent.date,\n          price: resData.data.createEvent.price,\n          creator: {\n            _id: userId, \n          },\n        },\n      ]);\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const bookEvent = async (eventId) => {\n    const requestBody = {\n      query: `\n        mutation BookEvent($eventId: ID!) {\n          bookEvent(eventId: $eventId) {\n            _id\n          }\n        }\n      `,\n      variables: {\n        eventId: eventId\n      }\n    };\n\n    try {\n      await graphqlRequest(requestBody.query, requestBody.variables, token);\n    } catch (error) {\n      console.error(error); // Handle error appropriately\n    }\n  };\n\n  return {\n    events,\n    isLoading,\n    fetchEvents,\n    createEvent,\n    bookEvent,\n  };\n};\n\nexport default useEvents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}