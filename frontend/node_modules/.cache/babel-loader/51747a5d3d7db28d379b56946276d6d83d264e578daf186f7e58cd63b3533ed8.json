{"ast":null,"code":"var _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./Auth.css\";\nimport { useAuth } from \"../../context/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const authContext = useAuth();\n  const navigate = useNavigate();\n  const validateForm = () => {\n    var _confirmPasswordRef$c;\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = (_confirmPasswordRef$c = confirmPasswordRef.current) === null || _confirmPasswordRef$c === void 0 ? void 0 : _confirmPasswordRef$c.value;\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailPattern.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n    if (password.length < 6) {\n      return \"Password should be at least 6 characters long.\";\n    }\n    if (!isLogin && password !== confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null;\n  };\n  const handleResponse = resData => {\n    if (resData.data.login) {\n      const {\n        token,\n        userId,\n        tokenExpiration\n      } = resData.data.login;\n      authContext.login(token, userId, tokenExpiration);\n      navigate(\"/events\");\n    } else if (resData.data.createUser) {\n      setIsLogin(true);\n      setErrorMessage(\"User created! Please log in.\");\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const error = validateForm();\n    if (error) {\n      setErrorMessage(error);\n      return;\n    }\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const query = isLogin ? `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }` : `\n        mutation {\n          createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n            _id\n            email\n          }\n        }`;\n    const requestBody = {\n      query\n    };\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(handleResponse).catch(() => setErrorMessage(\"Something went wrong.\"));\n  };\n  const handleSwitchMode = () => {\n    setIsLogin(prevState => !prevState);\n    setErrorMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            ref: passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            ref: confirmPasswordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? \"Login\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switch-button\",\n        onClick: handleSwitchMode,\n        children: isLogin ? \"Switch to Signup\" : \"Switch to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"8pQmorbTyQeNtriQo3zAHYK3/J0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useRef","useAuth","useNavigate","jsxDEV","_jsxDEV","AuthPage","_s","isLogin","setIsLogin","errorMessage","setErrorMessage","emailRef","passwordRef","confirmPasswordRef","authContext","navigate","validateForm","_confirmPasswordRef$c","email","current","value","password","confirmPassword","emailPattern","test","length","handleResponse","resData","data","login","token","userId","tokenExpiration","createUser","handleSubmit","event","preventDefault","error","query","requestBody","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","catch","handleSwitchMode","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./Auth.css\";\nimport { useAuth } from \"../../context/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthPage = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  const authContext = useAuth(); \n  const navigate = useNavigate();\n\n  const validateForm = () => {\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current?.value;\n\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailPattern.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n    if (password.length < 6) {\n      return \"Password should be at least 6 characters long.\";\n    }\n    if (!isLogin && password !== confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null;\n  };\n\n  const handleResponse = (resData) => {\n    if (resData.data.login) {\n      const { token, userId, tokenExpiration } = resData.data.login;\n      authContext.login(token, userId, tokenExpiration);\n      navigate(\"/events\");\n    } else if (resData.data.createUser) {\n      setIsLogin(true);\n      setErrorMessage(\"User created! Please log in.\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const error = validateForm();\n    if (error) {\n      setErrorMessage(error);\n      return;\n    }\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    const query = isLogin\n      ? `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }`\n      : `\n        mutation {\n          createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n            _id\n            email\n          }\n        }`;\n\n    const requestBody = { query };\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(handleResponse)\n      .catch(() => setErrorMessage(\"Something went wrong.\"));\n  };\n\n  const handleSwitchMode = () => {\n    setIsLogin((prevState) => !prevState);\n    setErrorMessage(\"\");\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div className=\"form-control\">\n            <label htmlFor=\"email\">E-mail</label>\n            <input type=\"email\" id=\"email\" ref={emailRef} />\n          </div>\n\n          <div className=\"form-control\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" ref={passwordRef} />\n          </div>\n\n          {!isLogin && (\n            <div className=\"form-control\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input type=\"password\" id=\"confirmPassword\" ref={confirmPasswordRef} />\n            </div>\n          )}\n\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n          <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\n        </form>\n\n        <button className=\"switch-button\" onClick={handleSwitchMode}>\n          {isLogin ? \"Switch to Signup\" : \"Switch to Login\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}