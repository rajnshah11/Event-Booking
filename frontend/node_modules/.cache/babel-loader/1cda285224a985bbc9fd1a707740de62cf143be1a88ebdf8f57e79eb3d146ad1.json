{"ast":null,"code":"var _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./Auth.css\";\nimport { useAuth } from \"../../context/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const authContext = useAuth();\n  const navigate = useNavigate();\n  const validateForm = (email, password, confirmPassword) => {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailPattern.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n    if (password.length < 6) {\n      return \"Password should be at least 6 characters long.\";\n    }\n    if (!isLogin && password !== confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current ? confirmPasswordRef.current.value : null;\n    const error = validateForm(email, password, confirmPassword);\n    if (error) {\n      setErrorMessage(error);\n      return;\n    }\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n    };\n    if (!isLogin) {\n      requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              email\n            }\n          }\n        `\n      };\n    }\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(resData => {\n      if (resData.data.login && resData.data.login.token) {\n        authContext.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n        navigate(\"/events\");\n      } else if (resData.data.createUser) {\n        setIsLogin(true);\n        setErrorMessage(\"User created! Please log in.\");\n      }\n    }).catch(err => {\n      console.log(err);\n      setErrorMessage(\"Something went wrong.\");\n    });\n  };\n  const handleSwitch = () => {\n    setIsLogin(prevState => !prevState);\n    setErrorMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            ref: passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            ref: confirmPasswordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? \"Login\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switch-button\",\n        onClick: handleSwitch,\n        children: isLogin ? \"Switch to Signup\" : \"Switch to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"8pQmorbTyQeNtriQo3zAHYK3/J0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useRef","useAuth","useNavigate","jsxDEV","_jsxDEV","AuthPage","_s","isLogin","setIsLogin","errorMessage","setErrorMessage","emailRef","passwordRef","confirmPasswordRef","authContext","navigate","validateForm","email","password","confirmPassword","emailPattern","test","length","handleSubmit","event","preventDefault","current","value","error","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","userId","tokenExpiration","createUser","catch","err","console","log","handleSwitch","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./Auth.css\";\nimport { useAuth } from \"../../context/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthPage = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  const authContext = useAuth(); \n\n  const navigate = useNavigate();\n\n  const validateForm = (email, password, confirmPassword) => {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailPattern.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n    if (password.length < 6) {\n      return \"Password should be at least 6 characters long.\";\n    }\n    if (!isLogin && password !== confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current\n      ? confirmPasswordRef.current.value\n      : null;\n\n    const error = validateForm(email, password, confirmPassword);\n    if (error) {\n      setErrorMessage(error);\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n    };\n\n    if (!isLogin) {\n      requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              email\n            }\n          }\n        `,\n      };\n    }\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.data.login && resData.data.login.token) {\n          authContext.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n          navigate(\"/events\");\n        } else if (resData.data.createUser) {\n          setIsLogin(true);\n          setErrorMessage(\"User created! Please log in.\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(\"Something went wrong.\");\n      });\n  };\n\n  const handleSwitch = () => {\n    setIsLogin((prevState) => !prevState);\n    setErrorMessage(\"\");\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div className=\"form-control\">\n            <label htmlFor=\"email\">E-mail</label>\n            <input type=\"email\" id=\"email\" ref={emailRef} />\n          </div>\n\n          <div className=\"form-control\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" ref={passwordRef} />\n          </div>\n\n          {!isLogin && (\n            <div className=\"form-control\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input type=\"password\" id=\"confirmPassword\" ref={confirmPasswordRef} />\n            </div>\n          )}\n\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n          <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\n        </form>\n\n        <button className=\"switch-button\" onClick={handleSwitch}>\n          {isLogin ? \"Switch to Signup\" : \"Switch to Login\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}