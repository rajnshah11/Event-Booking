{"ast":null,"code":"var _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login as loginAction } from \"../../store/authSlice\";\nimport { loginUser, signUpUser } from \"../../controller/authContoller/authController.js\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const validateForm = () => {\n    var _confirmPasswordRef$c;\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = (_confirmPasswordRef$c = confirmPasswordRef.current) === null || _confirmPasswordRef$c === void 0 ? void 0 : _confirmPasswordRef$c.value;\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailPattern.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n    if (password.length < 6) {\n      return \"Password should be at least 6 characters long.\";\n    }\n    if (!isLogin && password !== confirmPassword) {\n      return \"Passwords do not match.\";\n    }\n    return null;\n  };\n  const handleResponse = userData => {\n    if (isLogin) {\n      const {\n        token,\n        userId\n      } = userData;\n      console.log(token, userId);\n      dispatch(loginAction({\n        token,\n        userId\n      }));\n      navigate(\"/events\");\n    } else {\n      setIsLogin(true);\n      setErrorMessage(\"User created! Please log in.\");\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const error = validateForm();\n    if (error) {\n      setErrorMessage(error);\n      return;\n    }\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    try {\n      const userData = isLogin ? await loginUser(email, password) : await signUpUser(email, password);\n      handleResponse(userData);\n    } catch (error) {\n      // Display specific error messages returned by the server\n      setErrorMessage(error.message || \"Something went wrong.\");\n      console.error(\"Login/Signup error:\", error); // Log error to the console\n    }\n  };\n  const handleSwitchMode = () => {\n    setIsLogin(prevState => !prevState);\n    setErrorMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            ref: emailRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            ref: passwordRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            ref: confirmPasswordRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? \"Login\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switch-button\",\n        onClick: handleSwitchMode,\n        children: isLogin ? \"Switch to Signup\" : \"Switch to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPage, \"aRfqrWjzBBpZAmjyLZLYS/xY3jc=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useRef","useDispatch","useNavigate","login","loginAction","loginUser","signUpUser","jsxDEV","_jsxDEV","AuthPage","_s","isLogin","setIsLogin","errorMessage","setErrorMessage","emailRef","passwordRef","confirmPasswordRef","dispatch","navigate","validateForm","_confirmPasswordRef$c","email","current","value","password","confirmPassword","emailPattern","test","length","handleResponse","userData","token","userId","console","log","handleSubmit","event","preventDefault","error","message","handleSwitchMode","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","ref","required","onClick","_c","$RefreshReg$"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\"; \nimport { useNavigate } from \"react-router-dom\";\nimport { login as loginAction } from \"../../store/authSlice\";\nimport { loginUser, signUpUser } from \"../../controller/authContoller/authController.js\";\nimport \"./Auth.css\";\n\nconst AuthPage = () => {\n    const [isLogin, setIsLogin] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const confirmPasswordRef = useRef();\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const validateForm = () => {\n        const email = emailRef.current.value;\n        const password = passwordRef.current.value;\n        const confirmPassword = confirmPasswordRef.current?.value;\n\n        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n        if (!emailPattern.test(email)) {\n            return \"Please enter a valid email address.\";\n        }\n        if (password.length < 6) {\n            return \"Password should be at least 6 characters long.\";\n        }\n        if (!isLogin && password !== confirmPassword) {\n            return \"Passwords do not match.\";\n        }\n        return null;\n    };\n\n    const handleResponse = (userData) => {\n        if (isLogin) {\n            const { token, userId } = userData;\n            console.log(token, userId);\n            dispatch(loginAction({ token, userId }));\n            navigate(\"/events\");\n        } else {\n            setIsLogin(true);\n            setErrorMessage(\"User created! Please log in.\");\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const error = validateForm();\n        if (error) {\n            setErrorMessage(error);\n            return;\n        }\n\n        const email = emailRef.current.value;\n        const password = passwordRef.current.value;\n\n        try {\n            const userData = isLogin\n                ? await loginUser(email, password)\n                : await signUpUser(email, password);\n            handleResponse(userData);\n        } catch (error) {\n            // Display specific error messages returned by the server\n            setErrorMessage(error.message || \"Something went wrong.\");\n            console.error(\"Login/Signup error:\", error); // Log error to the console\n        }\n    };\n\n    const handleSwitchMode = () => {\n        setIsLogin((prevState) => !prevState);\n        setErrorMessage(\"\");\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <div className=\"auth-card\">\n                <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\n                <form className=\"auth-form\" onSubmit={handleSubmit}>\n                    <div className=\"form-control\">\n                        <label htmlFor=\"email\">E-mail</label>\n                        <input type=\"email\" id=\"email\" ref={emailRef} required />\n                    </div>\n\n                    <div className=\"form-control\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" ref={passwordRef} required />\n                    </div>\n\n                    {!isLogin && (\n                        <div className=\"form-control\">\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                            <input type=\"password\" id=\"confirmPassword\" ref={confirmPasswordRef} required />\n                        </div>\n                    )}\n\n                    {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n                    <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\n                </form>\n\n                <button className=\"switch-button\" onClick={handleSwitchMode}>\n                    {isLogin ? \"Switch to Signup\" : \"Switch to Login\"}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}