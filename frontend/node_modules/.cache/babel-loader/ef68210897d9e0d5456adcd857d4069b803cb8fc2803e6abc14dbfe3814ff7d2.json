{"ast":null,"code":"var _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Event/Modal.js\";\nimport React from \"react\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = props => {\n  console.log(props);\n  const renderChildren = () => {\n    return React.Children.map(props.children, (child, index) => {\n      // Check if the child is a string\n      if (typeof child === \"string\") {\n        // Conditional rendering based on the index\n        if (index === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-child\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                display: \"inline\"\n              },\n              children: [\"Event Title: \", child]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this);\n        } else if (index === 1) {\n          // Extract the date and price if the child is a string\n          const [date, price] = child.split(\" - \"); // Assumes the format is \"date - price\"\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-child\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                display: \"inline\"\n              },\n              children: [\"Date: \", date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                display: \"inline\"\n              },\n              children: [\"Price: \", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this);\n        } else if (index === 2) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                display: \"inline\"\n              },\n              children: [\"Description: \", child]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this);\n        }\n      } else {\n        // If the child is not a string, handle it appropriately\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-child\",\n          children: child\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      }\n      return null; // For any other indices, return null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: props.onCancel,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"modal-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Title - \", props.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modal-content\",\n        children: renderChildren()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modal-actions\",\n        children: [props.canCancel && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-cancel\",\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), props.canConfirm && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-confirm\",\n          onClick: props.onConfirm,\n          children: props.confirmText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Modal","props","console","log","renderChildren","Children","map","children","child","index","className","style","display","fileName","_jsxFileName","lineNumber","columnNumber","date","price","split","onClick","onCancel","e","stopPropagation","title","canCancel","canConfirm","onConfirm","confirmText","_c","$RefreshReg$"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Event/Modal.js"],"sourcesContent":["import React from \"react\";\nimport \"./Modal.css\";\n\nconst Modal = (props) => {\n  console.log(props);\n\n  const renderChildren = () => {\n    return React.Children.map(props.children, (child, index) => {\n      // Check if the child is a string\n      if (typeof child === \"string\") {\n        // Conditional rendering based on the index\n        if (index === 0) {\n          return (\n            <div key={index} className=\"modal-child\">\n              <h2 style={{ display: \"inline\" }}>Event Title: {child}</h2>\n            </div>\n          );\n        } else if (index === 1) {\n          // Extract the date and price if the child is a string\n          const [date, price] = child.split(\" - \"); // Assumes the format is \"date - price\"\n          return (\n            <div key={index} className=\"modal-child\">\n              <p style={{ display: \"inline\" }}>Date: {date}</p>\n              <p style={{ display: \"inline\" }}>Price: {price}</p>\n            </div>\n          );\n        } else if (index === 2) {\n          return (\n            <div key={index} className=\"modal-child\">\n              <p style={{ display: \"inline\" }}>Description: {child}</p>\n            </div>\n          );\n        }\n      } else {\n        // If the child is not a string, handle it appropriately\n        return (\n          <div key={index} className=\"modal-child\">\n            {child}\n          </div>\n        );\n      }\n      return null; // For any other indices, return null\n    });\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={props.onCancel}>\n      <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n        <header className=\"modal-header\">\n          <h1>Title - {props.title}</h1>\n        </header>\n        <section className=\"modal-content\">\n          {renderChildren()}\n        </section>\n        <section className=\"modal-actions\">\n          {props.canCancel && (\n            <button className=\"btn btn-cancel\" onClick={props.onCancel}>\n              Cancel\n            </button>\n          )}\n          {props.canConfirm && (\n            <button className=\"btn btn-confirm\" onClick={props.onConfirm}>\n              {props.confirmText}\n            </button>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}