{"ast":null,"code":"import _slicedToArray from \"/Users/rajshah/Desktop/Event-Booking-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Auth.css\";\nimport AuthContext from \"../context/auth-context\";\nvar AuthPage = function AuthPage() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLogin = _useState2[0],\n    setIsLogin = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMessage = _useState4[0],\n    setErrorMessage = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isRedirect = _useState6[0],\n    setIsRedirect = _useState6[1]; // State for redirect\n  var authContext = useContext(AuthContext);\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var confirmPasswordRef = useRef();\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var email = emailRef.current.value;\n    var password = passwordRef.current.value;\n\n    // Trim and validate email and password\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setErrorMessage(\"Email and password are required.\");\n      return;\n    }\n\n    // Email validation regex\n    var emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(email)) {\n      setErrorMessage(\"Please enter a valid email.\");\n      return;\n    }\n\n    // Password validation\n    if (!isLogin) {\n      if (password.length < 6) {\n        setErrorMessage(\"Password must be at least 6 characters long.\");\n        return;\n      }\n      if (password !== confirmPasswordRef.current.value) {\n        setErrorMessage(\"Passwords do not match.\");\n        return;\n      }\n    }\n    var requestBody;\n\n    // Define the request based on login/signup state\n    if (isLogin) {\n      requestBody = {\n        query: \"\\n          query {\\n            login(email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\") {\\n              userId\\n              token\\n              tokenExpiration\\n            }\\n          }\\n        \")\n      };\n    } else {\n      requestBody = {\n        query: \"mutation {\\n          createUser(userInput: {email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\"}) {\\n            _id\\n            email\\n          }\\n        }\")\n      };\n    }\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(function (resData) {\n      // Check if login is successful\n      if (isLogin && resData.data.login.token) {\n        authContext.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n        setIsRedirect(true); // Set redirect state to true\n      } else if (!isLogin) {\n        console.log(\"User created successfully:\", resData.data.createUser);\n      }\n    }).catch(function (err) {\n      console.log(err);\n      setErrorMessage(\"An error occurred. Please try again.\");\n    });\n  };\n  var handleSwitch = function handleSwitch() {\n    setIsLogin(function (prev) {\n      return !prev;\n    });\n    setErrorMessage(\"\"); // Clear error message on switch\n  };\n\n  // Redirect to events page if isRedirect is true\n  if (isRedirect) {\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/events\",\n      replace: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 12\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"auth-form\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    ref: emailRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    ref: passwordRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), !isLogin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirm-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"confirm-password\",\n    ref: confirmPasswordRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), errorMessage && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 24\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-actions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleSwitch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Switch to \", isLogin ? \"Signup\" : \"Login\")));\n};\nexport default AuthPage;","map":{"version":3,"names":["React","useState","useContext","useRef","useHistory","AuthContext","AuthPage","_useState","_useState2","_slicedToArray","isLogin","setIsLogin","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","isRedirect","setIsRedirect","authContext","emailRef","passwordRef","confirmPasswordRef","handleSubmit","event","preventDefault","email","current","value","password","trim","length","emailPattern","test","requestBody","query","concat","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","userId","tokenExpiration","console","log","createUser","catch","err","handleSwitch","prev","createElement","Navigate","to","replace","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","ref","onClick"],"sources":["/Users/rajshah/Desktop/Event-Booking-master/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\"; \nimport \"./Auth.css\";\nimport AuthContext from \"../context/auth-context\";\n\nconst AuthPage = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isRedirect, setIsRedirect] = useState(false); // State for redirect\n  const authContext = useContext(AuthContext);\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    // Trim and validate email and password\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setErrorMessage(\"Email and password are required.\");\n      return;\n    }\n\n    // Email validation regex\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(email)) {\n      setErrorMessage(\"Please enter a valid email.\");\n      return;\n    }\n\n    // Password validation\n    if (!isLogin) {\n      if (password.length < 6) {\n        setErrorMessage(\"Password must be at least 6 characters long.\");\n        return;\n      }\n      if (password !== confirmPasswordRef.current.value) {\n        setErrorMessage(\"Passwords do not match.\");\n        return;\n      }\n    }\n\n    let requestBody;\n\n    // Define the request based on login/signup state\n    if (isLogin) {\n      requestBody = {\n        query: `\n          query {\n            login(email: \"${email}\", password: \"${password}\") {\n              userId\n              token\n              tokenExpiration\n            }\n          }\n        `,\n      };\n    } else {\n      requestBody = {\n        query: `mutation {\n          createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n            _id\n            email\n          }\n        }`,\n      };\n    }\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        // Check if login is successful\n        if (isLogin && resData.data.login.token) {\n          authContext.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n          setIsRedirect(true); // Set redirect state to true\n        } else if (!isLogin) {\n          console.log(\"User created successfully:\", resData.data.createUser);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(\"An error occurred. Please try again.\");\n      });\n  };\n\n  const handleSwitch = () => {\n    setIsLogin((prev) => !prev);\n    setErrorMessage(\"\"); // Clear error message on switch\n  };\n\n  // Redirect to events page if isRedirect is true\n  if (isRedirect) {\n    return <Navigate to=\"/events\" replace />;\n  }\n\n  return (\n    <form className=\"auth-form\" onSubmit={handleSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"email\">E-mail</label>\n        <input type=\"email\" id=\"email\" ref={emailRef} />\n      </div>\n\n      <div className=\"form-control\">\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" ref={passwordRef} />\n      </div>\n\n      {!isLogin && (\n        <div className=\"form-control\">\n          <label htmlFor=\"confirm-password\">Confirm Password</label>\n          <input\n            type=\"password\"\n            id=\"confirm-password\"\n            ref={confirmPasswordRef}\n          />\n        </div>\n      )}\n\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={handleSwitch}>\n          Switch to {isLogin ? \"Signup\" : \"Login\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}